---
import { Image } from 'astro:assets'
import FormattedDate from '../../components/ui/FormattedDate.astro'
import AppPage from '../../layouts/AppPage.astro'
import Content from '../../layouts/Content.astro'
import { SITE_TITLE } from '@src/consts'
import Spacer from '@src/components/ui/Spacer.astro'
import HyperLink from '@src/components/ui/HyperLink.astro'
import { truncateDescription } from '@components/hooks/truncateDescription'
import { project } from '@components/hooks/fetchProject.ts'

type PaginateFunction = (array: any[], options: { pageSize: number }) => any

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
	return paginate(project, { pageSize: 6 })
}

type projectProps = {
	slug: string
	data: {
		title: string
		description: string
		heroImage: string
		pubDate: string
	}
}

const { page } = Astro.props
const { prev, next } = page.url
---

<AppPage title={`${SITE_TITLE} - Projekty & Aplikace`}>
	<Content class='pt-10'>
		<ul
			class="grid w-full grid-cols-1 gap-6 duration-1000 animate-in fade-in md:grid-cols-2 lg:grid-cols-3"
		>
			{
				page.data.map((project: projectProps) => (
					<li class="w-full rounded-2xl border border-primary_light p-4 transition-colors duration-200 hover:bg-primary_light/20">
						<a href={`/project/${project.slug}/`} class="block">
							<div class="h-52 w-full">
								<Image
									format="avif"
									quality="low"
									width={1280}
									height={720}
									src={project.data.heroImage}
									alt=""
									class="mb-2 h-full w-full rounded-2xl object-cover"
								/>
							</div>
							<article class="mt-5">
								<p class="text-center text-gray-400">
									<FormattedDate date={new Date(project.data.pubDate)} />
								</p>
								<h4 class="text-center text-xl">{project.data.title}</h4>
							</article>
							<Spacer class='my-4' />
							<p class="text-gray-300">{truncateDescription(project.data.description, 200)}</p>
						</a>
					</li>
				))
			}
		</ul>

		<!-- Pagination controls -->
		<section class="flex justify-center pt-10">
			{
				prev && (
					<HyperLink
						href={prev}
						class="mx-2 rounded-xl border border-primary_light px-4 py-2 transition-colors duration-300 hover:bg-primary_light/20"
						data-action="next"
					>
						Předchozí stránka
					</HyperLink>
				)
			}
			{
				next && (
					<HyperLink
						href={next}
						class="mx-2 rounded-xl border border-primary_light px-4 py-2 transition-colors duration-300 hover:bg-primary_light/20"
						data-action="next"
					>
						Další stránka
					</HyperLink>
				)
			}
		</section>
	</Content>
</AppPage>
